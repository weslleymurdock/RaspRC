name: Deploy

on:
  push:
    branches:
    - main
       
    workflow_dispatch:
      
jobs:
  deploy-rx:
    name: Deploy RX 
    runs-on: ubuntu-latest
    env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        DOTNET_NOLOGO: true
        DOTNET_GENERATE_ASPNET_CERTIFICATE: false
        DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
        DOTNET_MULTILEVEL_LOOKUP: 0
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
        
    steps:
    - uses: actions/checkout@v4
      
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.*

    - name: Build & Publish
      run: |
        cd ./src/Rx
        dotnet restore
        dotnet build -c Release --no-restore
        mkdir -p ${{ github.workspace }}/src/Rx/publish
        dotnet publish -c Release -r linux-arm64 /p:PublishDir=${{ github.workspace }}/src/Rx/publish

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIV }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PUB }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa.pub
        ssh-keyscan -H ${{ secrets.IP }} >> ~/.ssh/known_hosts
    
    - name: Copy Assets
      run: |
        rsync -a ${{ github.workspace }}/src/Rx/Deploy/ ${{ secrets.USER_IP }}:~/    
        ssh ${{ secrets.USER_IP }} "rm -rf ~/publish && mkdir -p ~/publish"  
        rsync -a ${{ github.workspace }}/src/Rx/publish/* ${{ secrets.USER_IP }}:~/publish 
    
    - name: Setup apache
      run: |
        ssh ${{ secrets.USER_IP }} "sudo ~/setup-apache.sh" 
        ssh ${{ secrets.USER_IP }} "sudo ~/setup-site.sh /home/rx"
          
              
  deploy-tx:
    name: Deploy TX
    runs-on: self-hosted
    env:
        DOTNET_INSTALL_DIR: /opt/dotnet
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        DOTNET_NOLOGO: true
        DOTNET_GENERATE_ASPNET_CERTIFICATE: false
        DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
        DOTNET_MULTILEVEL_LOOKUP: 0
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.*

    - name: Apache
      run: |
        sudo apt install apache2 -y
        sudo usermod -a -G www-data $USER
        sudo chown -R -f www-data:www-data /var/www/html
        sudo mkdir -p /var/www/rasprc-tx/
        sudo chown -R -f www-data:www-data /var/www/rasprc-tx/
        sudo touch /etc/apache2/sites-available/rasp.local.conf
        sudo echo "<VirtualHost *:80>" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "    ProxyPreserveHost On" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "    ProxyPass / http://127.0.0.1:5000/" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "    ProxyPassReverse / http://127.0.0.1:5000/" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "    ErrorLog ${APACHE_LOG_DIR}/tx-error.log" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "    CustomLog ${APACHE_LOG_DIR}/rx-access.log common" >> /etc/apache2/sites-available/rasp.local.conf
        sudo echo "</VirtualHost>" >> /etc/apache2/sites-available/rasp.local.conf

    - name: Build & Publish
      run: |
        cd ./src/Tx
        dotnet restore
        dotnet build -c Release --no-restore
        dotnet publish -c Release -r linux-arm64 /p:PublishDir=/var/www/rasprc-tx
        cd /etc/apache2/sites-enabled
        sudo a2dissite *
        sudo a2ensite rasp.local.conf
        sudo systemctl reload apache2        
        chmod 755 -R /var/www/

    - name: Service
      run: |
        cd ./src/Tx/Deploy
        sudo cp -v rasp.local.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable rasp.local
        systemctl start rasp.local
